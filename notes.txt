when we compile java file we will get .class file 

and .class file contains byte code -> 

who is going to read bytecode -> JRE -> JVM 



Student s  = new Student(); 



memory 

    s -> name 
         maths 
         sci    
         eng  
         
Student s2 = new Student(); 

    s2 -> name 
          maths
          sci   
          eng 

    
if i create 500 objects then how many times name variable created? 
500 

1 instance - 1 
2 instance - 2 

per instance -> copy 

class level variable -> instance variable 


variable -> 3 type 


1) instance variable -> class  -> object or instance -> n time -> heap 
2) static variable   -> class  -> classname access -> 1 time   -> heap 
3) local variable -> method , loop -> stack 


500 instance -> Student 
    name maths sci eng  : 500 time 
    collegeCode : 1 time 

   instance -> share  

--------------------------------------------------------------------------

Constructor -> 

---------------------------------------------------------------------------

IPL ->


Player -> name category {bw,bt,all} age totalScore totalWickets totalIningsPlayed 

you have two option to init.  player 

if user want to add all info then u have to read it and add the player  
if user dont want then u have to pass default values 

to print all info for particular player we have display method 

we want to create 2 player 

---------------------------------------------------------------------


inheritance ->object of one class can access property of another class 
            -> sharing 
            -> reusablity 

    to achieve inheritance we use extends keywords in class 

    class -> property -> give -> PARENT , SUPER , BASE 
    class -> property -> take -> child , derived , sub 
    

five types -> 
    single level 
    multi level
    multiple -> class directly {interface}
    hirerchical 
    hybrid -> combine any two inheritance 


super keyword -> super keyword is used to access parent's property {method,variable}from child 
                        parent is direct parent 
                        if direct parent does not have that property then 
                        it calls indirect parents 


input1()
input2()
input3()

input()
input()
input()

----------------------------------------------------------------------
                        Animal 

                WildAnimal      PetAnimal 
            Monkey                  Dog 
    Lagoon  Langoor            Le           Pom 



    Lagoon.walk() 

Overriding -> Parent method => same signature child => 

-------------------------------------------
can we create add method in calc class more than 1 time 
can we create same method more than 1 time in same class 
YES 
method overloading -> 
        add(12,12)
        add(121,12,121)

overloading can be perform in 1 class or in parent child 

Overriding can be perform in parent child only 
--------------------------------------------------------------------
Polymorphic object -> 

---------------------------------------------------------------------

final  keyword -> 
    class - yes  - no one can inherit 
    method - yes  - no one can override 
    variable - yes  - no one can modify 

---------------------------------------------------------------------
abstract -> 
    class - yes 
    method - yes - we dont have defination - body - we have only declaration 
    variable - no 

    
----------------------------------------------------------------------    

interface -> pure abstract class 

    interface has all the method abstract by default 

to create interface we will use interface keyword 

class implements the interface 

class - class : extends 
class - interface : implements 

-------------------------------------------------------------------------


row X col -> matrix 
2D 
graph -> plot -> x y 


int x[][]; //declartion 



1   2   3   
4   5   6
7   8   9   

max:  9
min : 1
sum : 45 
sum of 1stRow : 6 
sum of 2ndRow : 15 
sum of 3rdRow : 24 

--------------------------------------------------------------------------------

1   2   3   
4   5   6
7   8   9   

 
zero array -> an array who's max digit is zero 
swap array -> tranpose 

1   2   3   
4   5   6
7   8   9   

1 4 7
2 5 8
3 6 9 
--------------------------------------------------------------------

a:
1 2 3
4 5 6 
7 8 9

b:
9 8 7
6 5 4
3 2 1  
  a*b = >
c  
   (1*9+2*6+3*3) (1*8+2*5*3*2)  ()
   () () () 


   1 row 
   2 col 
   3 time 

    i:row 
    j:col 

    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            for(k=0;k<3;k++){
                c[i][j] +=  a[i][k]*b[k][j]; //i am king king is jadugar 
            }
        }
    }

    //c print -> i j loop  
---------------------------------------------------------------------------------------------







